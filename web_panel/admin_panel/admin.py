# Register your models here.
from django.contrib import admin
from django.utils.html import format_html
from django.contrib.auth.models import Group
from .models import *

admin.site.unregister(Group)
admin.site.site_header = "–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å"
admin.site.site_title = "–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å"
admin.site.index_title = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å"

# Register your models here.

### –ü–û–õ–¨–ó–û–í–ê–ò–ï–õ–ò ###
class UsersAdmin(admin.ModelAdmin):
    """–ú–æ–¥–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    def has_add_permission(self, request):
        return False

    def get_actions(self, request):
        actions = super().get_actions(request)
        if 'delete_selected' in actions:
            del actions['delete_selected']
        return actions


    list_display = ['first_name', 'user_name', 'contact', 'language', 'user_id']
    search_fields = ['user_name', 'first_name', 'contact', 'language']
    list_filter = ['language']
    exclude = ['user_id']

    class Meta:
        model = Users

admin.site.register(Users, UsersAdmin)
### –ü–û–õ–¨–ó–û–í–ê–ò–ï–õ–ò ###


### –ë–†–ï–ù–î–´ ###
class BrandsAdmin(admin.ModelAdmin):
    """–ë—Ä–µ–Ω–¥—ã"""
    list_display = ['title_ru', 'position']

    class Meta:
        model = Brands

admin.site.register(Brands, BrandsAdmin)
### –ë–†–ï–ù–î–´ ###


### –ö–ê–¢–ï–ì–û–†–ò–ò –ó–î–û–†–û–í–û–ï –ü–ò–¢–ê–ù–ò–ï ###
class CategoryHealthyAdmin(admin.ModelAdmin):
    """–ú–æ–¥–µ–ª—å –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∑–¥–æ—Ä–æ–≤–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è"""
    list_display = ['title_ru', 'position']

    class Meta:
        model = CategoryHealthy

admin.site.register(CategoryHealthy, CategoryHealthyAdmin)
### –ö–ê–¢–ï–ì–û–†–ò–ò –ó–î–û–†–û–í–û–ï –ü–ò–¢–ê–ù–ò–ï ###


### –ü–†–û–î–£–ö–¢–´ –ó–î–û–†–û–í–û–ï –ü–ò–¢–ê–ù–ò–ï ###
class ProductsHealthyAdmin(admin.ModelAdmin):
    """–ú–æ–¥–µ–ª—å –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∑–¥–æ—Ä–æ–≤–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è"""
    def image_tag_product(self, obj):
        try:
            return format_html('<img src="{}" width="60px"/>'.format(obj.photo_path.url))
        except Exception:
            return None
    image_tag_product.short_description = '–§–æ—Ç–æ'

    def status_list(self, obj):
        d_status = {0: "‚ùå", 1: "‚úÖ"}
        return d_status[obj.status]
    status_list.short_description = '–°—Ç–∞—Ç—É—Å'

    def description_text_list(self, obj):
        description = """{}""".format(obj.description_ru)
        for rep in ['<b>', '</b>', '<code>', '</code>', '<i>', '</i>']:
            description = description.replace(rep, '')
        return description[:50] + '...'
    description_text_list.short_description = '–û–ø–∏—Å–∞–Ω–∏–µ'

    list_display = ['title_ru', 'description_text_list', 'price', 'category', 'brand', 'status_list', 'image_tag_product']
    search_fields = ['title_ru', 'description_ru', 'price', 'category__title_ru']
    list_filter = ['category', 'brand', 'status']

    class Meta:
        model = ProductsHealthy

admin.site.register(ProductsHealthy, ProductsHealthyAdmin)
### –ü–†–û–î–£–ö–¢–´ –ó–î–û–†–û–í–û–ï –ü–ò–¢–ê–ù–ò–ï ###


### –ö–ê–¢–ï–ì–û–†–ò–ò –°–ü–û–†–¢–ò–í–ù–û–ì–û –ü–ò–¢–ê–ù–ò–ï ###
class CategorySportAdmin(admin.ModelAdmin):
    """–ú–æ–¥–µ–ª—å –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è"""
    list_display = ['title_ru', 'position']

    class Meta:
        model = CategorySport

admin.site.register(CategorySport, CategorySportAdmin)
### –ö–ê–¢–ï–ì–û–†–ò–ò –°–ü–û–†–¢–ò–í–ù–û–ì–û –ü–ò–¢–ê–ù–ò–ï ###


### –ü–†–û–î–£–ö–¢–´ –°–ü–û–†–¢–ò–í–ù–û–ì–û –ü–ò–¢–ê–ù–ò–ï ###
class ProductsSportAdmin(admin.ModelAdmin):
    """–ú–æ–¥–µ–ª—å –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è"""
    def image_tag_product(self, obj):
        try:
            return format_html('<img src="{}" width="60px"/>'.format(obj.photo_path.url))
        except Exception:
            return None
    image_tag_product.short_description = '–§–æ—Ç–æ'

    def status_list(self, obj):
        d_status = {0: "‚ùå", 1: "‚úÖ"}
        return d_status[obj.status]
    status_list.short_description = '–°—Ç–∞—Ç—É—Å'

    def description_text_list(self, obj):
        description = """{}""".format(obj.description_ru)
        for rep in ['<b>', '</b>', '<code>', '</code>', '<i>', '</i>']:
            description = description.replace(rep, '')
        return description[:50] + '...'
    description_text_list.short_description = '–û–ø–∏—Å–∞–Ω–∏–µ'

    list_display = ['title_ru', 'description_text_list', 'price', 'category', 'brand', 'status_list', 'image_tag_product']
    search_fields = ['title_ru', 'description_ru', 'price', 'category__title_ru']
    list_filter = ['category', 'brand', 'status']

    class Meta:
        model = ProductsSport

admin.site.register(ProductsSport, ProductsSportAdmin)
### –ü–†–û–î–£–ö–¢–´ –°–ü–û–†–¢–ò–í–ù–û–ì–û –ü–ò–¢–ê–ù–ò–ï ###


### –ó–ê–ö–ê–ó–´ ###
class OrdersAdmin(admin.ModelAdmin):
    """–ú–æ–¥–µ–ª—å –∑–∞–∫–∞–∑–æ–≤"""
    def get_actions(self, request):
        actions = super().get_actions(request)
        if 'delete_selected' in actions:
            del actions['delete_selected']
        return actions

    def has_add_permission(self, request):
        return False

    def has_delete_permission(self, request, obj=None):
        return False

    def order_text_list(self, obj):
        food_text = """{}""".format(obj.order_text)
        for rep in ['<b>', '</b>', '<code>', '</code>', '<i>', '</i>', '--------------------']:
            food_text = food_text.replace(rep, '')
        return food_text[:50] + '...'
    order_text_list.short_description = '–ó–∞–∫–∞–∑'

    def list_count(self, obj):
        return "–ó–∞–∫–∞–∑ - #{}".format(obj.count)
    list_count.short_description = '‚Ññ –ù–æ–º–µ—Ä'

    def list_status(self, obj):
        d_status = {0: "üõí", 1: "‚úÖ", 2: "‚åõ", 3: "‚ùå"}
        return d_status[obj.status]
    list_status.short_description = '–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞'

    list_display = ['list_count', 'first_name', 'contact', 'order_text_list', 'full_price', 'type_payment', 'type_delivery', 'date', 'list_status']
    search_fields = ['order_text', 'full_price', 'first_name', 'contact']
    exclude = ['user_id', 'user_name', 'date', 'message_id_chat', 'type_payment', 'status', 'count']
    list_filter = ['status', 'type_payment', 'type_delivery']

    class Meta:
        model = Orders

admin.site.register(Orders, OrdersAdmin)
### –ó–ê–ö–ê–ó–´ ###


### –ê–ö–¶–ò–ò ###
class ActionsAdmin(admin.ModelAdmin):
    """–ú–æ–¥–µ–ª—å –∞–∫—Ü–∏–π"""
    def image_tag_light(self, obj):
        try:
            return format_html('<img src="{}" width="80px"/>'.format(obj.photo_path.url))
        except Exception:
            return None
    image_tag_light.short_description = '–§–æ—Ç–æ –∞–∫—Ü–∏–∏'

    def list_status(self, obj):
        d_status = {0: "‚ùå", 1: "‚úÖ"}
        return d_status[obj.status]
    list_status.short_description = '–°—Ç–∞—Ç—É—Å'

    list_display = ['title_ru', 'category', 'list_status', 'image_tag_light']
    search_fields = ['title_ru', 'category']
    list_filter = ['category']

    class Meta:
        model = Actions

admin.site.register(Actions, ActionsAdmin)
### –ê–ö–¶–ò–ò ###


### –ù–û–í–û–°–¢–ò ###
class NewsAdmin(admin.ModelAdmin):
    """–ú–æ–¥–µ–ª—å –Ω–æ–≤–æ—Å—Ç–µ–π"""
    def image_tag_light(self, obj):
        try:
            return format_html('<img src="{}" width="80px"/>'.format(obj.photo_path.url))
        except Exception:
            return None
    image_tag_light.short_description = '–§–æ—Ç–æ –Ω–æ–≤–æ—Å—Ç–∏'

    def list_status(self, obj):
        d_status = {0: "‚ùå", 1: "‚úÖ"}
        return d_status[obj.status]
    list_status.short_description = '–°—Ç–∞—Ç—É—Å'

    list_display = ['title_ru', 'category', 'list_status', 'image_tag_light']
    search_fields = ['title_ru', 'category']
    list_filter = ['category']

    class Meta:
        model = News

admin.site.register(News, NewsAdmin)
### –ù–û–í–û–°–¢–ò ###


### –ü–ê–†–¢–ù–ï–†–ö–ê ###
class PartnershipAdmin(admin.ModelAdmin):
    """–ü–∞—Ä—Ç–Ω–µ—Ä–∫–∞"""
    def has_add_permission(self, request):
        return False

    def document_tag(self, obj):
        try:
            return format_html('<a href="{}">–°–ö–ê–ß–ê–¢–¨</a>'.format(obj.document.url))
        except Exception:
            return None
    document_tag.short_description = '–î–æ–∫—É–º–µ–Ω—Ç'


    def comment_list(self, obj):
        return '{}...'.format(str(obj.comment)[:15])
    comment_list.short_description = '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π'

    list_display = ['full_name', 'contact', 'brand_name', 'document_tag', 'comment_list', 'brand']
    search_fields = ['full_name', 'contact', 'brand_name', 'document', 'comment']
    list_filter = ['brand']
    exclude = ['user_id']

    class Meta:
        model = Partnership

admin.site.register(Partnership, PartnershipAdmin)
### –ü–ê–†–¢–ù–ï–†–ö–ê ###


### –ü–†–û–ú–û–ö–û–î–´ ###
class PromocodesHealthAdmin(admin.ModelAdmin):
    """–ü—Ä–æ–º–æ–∫–æ–¥—ã"""
    def list_status(self, obj):
        d_status = {0: "‚ùå", 1: "‚úÖ"}
        return d_status[obj.status]
    list_status.short_description = '–°—Ç–∞—Ç—É—Å'

    list_display = ['promocode', 'discount', 'list_status', 'type_active', 'date_active', 'count_active']
    search_fields = ['promocode', 'discount', 'date_active', 'count_active', 'products__title_ru']
    list_filter = ['type_active', 'status']

    class Meta:
        model = PromocodesHealth

admin.site.register(PromocodesHealth, PromocodesHealthAdmin)


class PromocodesSportAdmin(admin.ModelAdmin):
    """–ü—Ä–æ–º–æ–∫–æ–¥—ã"""
    def list_status(self, obj):
        d_status = {0: "‚ùå", 1: "‚úÖ"}
        return d_status[obj.status]
    list_status.short_description = '–°—Ç–∞—Ç—É—Å'

    list_display = ['promocode', 'discount', 'list_status', 'type_active', 'date_active', 'count_active']
    search_fields = ['promocode', 'discount', 'date_active', 'count_active', 'products__title_ru']
    list_filter = ['type_active', 'status']

    class Meta:
        model = PromocodesSport

admin.site.register(PromocodesSport, PromocodesSportAdmin)


class PromocodesBrandsAdmin(admin.ModelAdmin):
    """–ü—Ä–æ–º–æ–∫–æ–¥—ã"""
    def list_status(self, obj):
        d_status = {0: "‚ùå", 1: "‚úÖ"}
        return d_status[obj.status]
    list_status.short_description = '–°—Ç–∞—Ç—É—Å'

    list_display = ['promocode', 'discount', 'list_status', 'type_active', 'date_active', 'count_active']
    search_fields = ['promocode', 'discount', 'date_active', 'count_active', 'brands__title_ru']
    list_filter = ['type_active', 'status']

    class Meta:
        model = PromocodesBrands

admin.site.register(PromocodesBrands, PromocodesBrandsAdmin)


class PromocodesActivateAdmin(admin.ModelAdmin):
    """–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã"""
    def has_add_permission(self, request):
        return False

    def has_change_permission(self, request, obj=None):
        return False

    list_display = ['promocode', 'user_id', 'date_time']
    search_fields = ['promocode', 'user_id_id__first_name',  'date_time']

    class Meta:
        model = PromocodesActivate

admin.site.register(PromocodesActivate, PromocodesActivateAdmin)
### –ü–†–û–ú–û–ö–û–î–´ ###


### –ê–î–ú–ò–ù –ë–û–¢–ê ###
class BotAdminAdmin(admin.ModelAdmin):
    """–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –±–æ—Ç–∞"""
    list_display = ['user_id']
    search_fields = ['user_id']

    class Meta:
        model = BotAdmin
admin.site.register(BotAdmin, BotAdminAdmin)
### –ê–î–ú–ò–ù –ë–û–¢–ê ###


# ## –ù–û–ú–ï–† –ó–ê–ö–ê–ó–ê ###
# class CountOrderAdmin(admin.ModelAdmin):
#     """–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞"""
#     list_display = ['count']
#
#     class Meta:
#         model = CountOrder
#
# admin.site.register(CountOrder, CountOrderAdmin)
# ## –ù–û–ú–ï–† –ó–ê–ö–ê–ó–ê ###